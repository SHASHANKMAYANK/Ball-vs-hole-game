import pygame
import random
pygame.init()
pygame.mixer.init()
game_window = pygame.display.set_mode((1200, 500))
pygame.display.set_caption("Ball vs Hole")
pygame.display.update()
clock = pygame.time.Clock()
font = pygame.font.SysFont(None, 55)
white = (255, 255, 255)  # red green blue
red = (255, 0, 0)
blue = (0, 0, 255)
black = (0, 0, 0)
green=(0,255,0)
def text_screen(text, color, x, y):
    screen_text = font.render(text, True, color)
    game_window.blit(screen_text, [x, y])

def welcome():
    exit_game = False
    pygame.mixer.music.load("OPENING MUSIC.mp3")
    pygame.mixer.music.play()
    while not exit_game:

        bgimg = pygame.image.load("ballhole.jpg")
        game_window.fill((233,210,229))
        bgimg = pygame.transform.scale(bgimg, (1200,500)).convert_alpha()
        game_window.blit(bgimg, (0, 0))

        text_screen("Press Space Bar To Play",red, 360,50)
        text_screen("Press I for instrctions ",blue, 375, 0)
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                exit_game = True
            if event.type == pygame.KEYDOWN:
                if event.key==pygame.K_i:
                    instructions()
                if event.key == pygame.K_SPACE:
                    gameloop()

        pygame.display.update()
        clock.tick(60)
def instructions():
    exit_game = False
    pygame.mixer.music.load("OPENING MUSIC.mp3")
    pygame.mixer.music.play()
    while not exit_game:

        bgimg = pygame.image.load("instructions.jpg")
        game_window.fill((233,210,229))
        bgimg = pygame.transform.scale(bgimg, (1200,500)).convert_alpha()
        game_window.blit(bgimg, (0, 0))

        text_screen("1.You can use all arrow keys to move the ball in all corresponding", black,0,0)
        text_screen("directions", black, 0, 50)
        text_screen("2.If you will hit the wall then game will over.", black,0,100)
        text_screen("3.If you will go beyond the screen game will be over.", black, 0, 150)
        text_screen("4.You need to dodge the walls and pass through the holes", black, 0, 200)
        text_screen("Press Space Bar To Play",blue,350,400)
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                exit_game = True
            if event.type == pygame.KEYDOWN:

                if event.key == pygame.K_SPACE:
                    gameloop()

        pygame.display.update()
        clock.tick(60)

def gameloop():
    pygame.mixer.music.load("background music.mp3")
    pygame.mixer.music.play()
    game_window = pygame.display.set_mode((1200, 500))
    pygame.display.set_caption("Flappy Bird Game")
    pygame.display.update()
    exit_game = False
    game_over = False
    bird_x = 40
    bird_y = random.randint(50,450)
    bird_size = 20
    obstacle_x = random.randint(500,600)
    obstacle_y1 = random.randint(0, 250)
    x=random.randint(10, 250)
    u=random.randint(80,150)
    m=random.randint(50,100)
    fps = 105
    velocity_y = 20
    velocity_x = 10
    clock = pygame.time.Clock()
    font = pygame.font.SysFont(None, 100)
    while not exit_game:
        if game_over:

            game_window.fill(white)
            bgimg1 = pygame.image.load("gameover.jpg")
            bgimg1 = pygame.transform.scale(bgimg1, (400, 500)).convert_alpha()
            game_window.blit(bgimg1, (0,0))
            bgimg2 = pygame.image.load("gamedone.jpg")
            bgimg2 = pygame.transform.scale(bgimg2, (400, 500)).convert_alpha()
            game_window.blit(bgimg2, (400, 0))
            bgimg3 = pygame.image.load("takerevenge.jpg")
            bgimg3 = pygame.transform.scale(bgimg3, (400, 509)).convert_alpha()
            game_window.blit(bgimg3, (800, 0))
            text_screen("Press Enter to continue",green, 765, 465)
            text_screen("Press escape to quit",blue, 0, 465)
            pygame.display.update()
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    exit_game = True
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_RETURN:
                        gameloop()

                    if event.key==pygame.K_ESCAPE:
                        pygame.quit()
                        quit()
        else:
            for event in pygame.event.get():
                if event.type==pygame.QUIT:
                    exit_game=True
                if event.type==pygame.KEYDOWN:
                    if event.key==pygame.K_UP:
                        bird_y=bird_y-velocity_y
                    if event.key == pygame.K_LEFT:
                        bird_x=bird_x-velocity_x
                    if event.key==pygame.K_DOWN:
                        bird_y=bird_y+velocity_y
                    if event.key==pygame.K_RIGHT:
                        bird_x=bird_x+velocity_x
                    if event.key==pygame.K_ESCAPE:
                        pygame.quit()
                        quit()
                    if event.key==pygame.K_u:
                        bird_y=bird_y-50
            bird_y=bird_y+1
            obstacle_x=obstacle_x-2
            game_window.fill(red)
            bgimg4 = pygame.image.load("img_1.png")
            bgimg4 = pygame.transform.scale(bgimg4, (1200, 540)).convert_alpha()
            game_window.blit(bgimg4, (0, 0))
            pygame.draw.rect(game_window,blue,[obstacle_x,0,m,obstacle_y1])
            pygame.draw.rect(game_window, blue, [obstacle_x,obstacle_y1+u, m,500-obstacle_y1-u ])
            pygame.draw.rect(game_window, blue, [obstacle_x+600, 0, m, obstacle_y1+x])
            pygame.draw.rect(game_window, blue, [obstacle_x+600,obstacle_y1 +u+x,m,500-obstacle_y1-u-x])
            pygame.draw.circle(game_window,red,[bird_x,bird_y],bird_size)
            if  abs(0-(bird_y))<=obstacle_y1 and obstacle_x+m/6>=bird_x>=obstacle_x-m/6:
                pygame.mixer.music.load("gameover.mp3")
                pygame.mixer.music.play()
                game_over=True
            if  abs(500-bird_y)<=500-obstacle_y1-u and obstacle_x+m/6>=bird_x+20>=obstacle_x-m/6:
                pygame.mixer.music.load("gameover.mp3")
                pygame.mixer.music.play()
                game_over = True
            if abs(0 - (bird_y))<=obstacle_y1+x and obstacle_x+600+m/6>=bird_x+20>=obstacle_x+600-m/6:
                pygame.mixer.music.load("gameover.mp3")
                pygame.mixer.music.play()
                game_over = True
            if  abs(500-bird_y)<=500-obstacle_y1-u-x and obstacle_x+600+m/6>=bird_x+20>=obstacle_x+600-m/6:
                pygame.mixer.music.load("gameover.mp3")
                pygame.mixer.music.play()
                game_over = True
            if bird_x<0 or bird_y<0 or bird_x>1200 or bird_y>500:
                pygame.mixer.music.load("gameover.mp3")
                pygame.mixer.music.play()
                game_over = True
            if bird_x>obstacle_x+600+m:
                gameloop()
        pygame.display.update()
        clock.tick(fps)
    pygame.quit()
    quit()
welcome()

